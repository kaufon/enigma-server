generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                      String    @id @default(uuid())
  emailHash               String    @unique @map("email_hash")
  encryptedEmailIv        String    @map("encrypted_email_iv")
  encryptedEmailContent   String    @map("encrypted_email_content") @db.Text
  masterKey               String    @map("master_key")
  emergencyPassphraseHash String?   @map("emergency_passphrase_hash")
  encryptedDataKey        String    @map("encrypted_data_key")
  passwordResetToken      String?   @unique @map("password_reset_token")
  passwordResetExpiresAt  DateTime? @map("password_reset_expires_at")
  createdAt               DateTime  @default(now()) @map("created_at")
  updatedAt               DateTime? @updatedAt @map("updated_at")

  credentials Credential[]
  category    Category[]

  @@map("users")
}

model Credential {
  id                       String    @id @default(uuid())
  encryptedTitleIv         String    @map("encrypted_title_iv")
  encryptedTitleContent    String    @map("encrypted_title_content") @db.Text
  encryptedUsernameIv      String    @map("encrypted_username_iv")
  encryptedUsernameContent String    @map("encrypted_username_content") @db.Text
  encryptedPasswordIv      String    @map("encrypted_password_iv")
  encryptedPasswordContent String    @map("encrypted_password_content") @db.Text
  encryptedUrlIv           String?   @map("encrypted_url_iv")
  encryptedUrlContent      String?   @map("encrypted_url_content") @db.Text
  createdAt                DateTime  @default(now()) @map("created_at")
  updatedAt                DateTime? @updatedAt @map("updated_at")
  userId                   String    @map("user_id")
  categoryId               String?   @map("category_id")

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  Category Category? @relation(fields: [categoryId], references: [id])

  @@map("credentials")
}

model Category {
  id     String @id @default(uuid())
  name   String
  userId String @map("user_id")

  credentials Credential[]
  user        User         @relation(fields: [userId], references: [id])
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime?    @default(now()) @map("updated_at")

  @@map("categories")
}
