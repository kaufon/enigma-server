generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                         String    @id @default(uuid())
  emailHash                  String    @unique @map("email_hash")
  encryptedEmailIv           String    @map("encrypted_email_iv")
  encryptedEmailContent      String    @map("encrypted_email_content") @db.Text
  masterKey                  String    @map("master_key")
  salt                       String
  emergencyPassphraseHash    String?   @map("emergency_passphrase_hash")
  securityQuestionAnswerHash String?   @map("security_question_answer_hash")
  securityQuestionId         String?
  passwordResetToken         String?   @unique @map("password_reset_token")
  passwordResetExpiresAt     DateTime? @map("password_reset_expires_at")
  createdAt                  DateTime  @default(now()) @map("created_at")
  updatedAt                  DateTime? @updatedAt @map("updated_at")

  credentials      Credential[]
  SecurityQuestion SecurityQuestion? @relation(fields: [securityQuestionId], references: [id])

  @@map("users")
}

model Credential {
  id        String    @id @default(uuid())
  login     String
  password  String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  userId    String    @map("user_id")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("credentials")
}

model SecurityQuestion {
  id    String @id @default(uuid())
  text  String @unique
  users User[]

  @@map("security_questions")
}
